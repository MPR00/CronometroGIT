{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vinicius\\\\Cronometro\\\\CronometroGIT\\\\cronometro\\\\src\\\\temporizador\\\\Temporizador.js\";\nimport React from 'react';\nimport './Temporizador.css';\n\nclass Temporizador extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      horas: 0,\n      minutos: 0,\n      segundos: 5\n    };\n    this.startTimer = this.startTimer.bind(this);\n  }\n\n  componentDidMount() {\n    this.myInterval = setInterval(() => {\n      const {\n        segundos,\n        minutos,\n        horas\n      } = this.state;\n      startTimer();\n\n      if (this.timer == 0 && this.state > 0) {\n        this.timer = setInterval(this.countDown, 1000);\n      }\n\n      if (segundos > 0) {\n        this.setState(({\n          segundos\n        }) => ({\n          segundos: segundos - 1\n        }));\n      }\n\n      if (segundos === 0) {\n        if (minutos > 0) {\n          this.setState(({\n            minutos\n          }) => ({\n            minutos: minutos - 1,\n            segundos: 59\n          }));\n        }\n      }\n\n      if (segundos === 0) {\n        if (minutos === 0) {\n          if (horas === 0) {\n            clearInterval(this.myInterval);\n          } else {\n            this.setState(({\n              horas\n            }) => ({\n              horas: horas - 1,\n              minutos: 59,\n              segundos: 59\n            }));\n          }\n        }\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.myInterval);\n  }\n\n  render() {\n    const {\n      horas,\n      minutos,\n      segundos\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Temporizador\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, horas === 0 && minutos === 0 && segundos === 0 ? /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }, \"Fim!\") : /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }, \"Tempo restante:      \", horas < 10 ? `0${horas}` : horas, \":\", minutos < 10 ? `0${minutos}` : minutos, \":\", segundos < 10 ? `0${segundos}` : segundos)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.startTimer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"Start\"), \"m: \", this.state.time.m, \" s: \", this.state.time.s));\n  }\n\n}\n\nexport default Temporizador;","map":{"version":3,"sources":["C:/Users/Vinicius/Cronometro/CronometroGIT/cronometro/src/temporizador/Temporizador.js"],"names":["React","Temporizador","Component","constructor","state","horas","minutos","segundos","startTimer","bind","componentDidMount","myInterval","setInterval","timer","countDown","setState","clearInterval","componentWillUnmount","render","time","m","s"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './Temporizador.css';\r\n\r\n\r\nclass Temporizador extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.startTimer = this.startTimer.bind(this);}\r\n  state = {\r\n    horas: 0,\r\n    minutos: 0,\r\n    segundos: 5,\r\n}\r\n    \r\n\r\ncomponentDidMount() {\r\n    this.myInterval = setInterval(() => {\r\n        const { segundos, minutos, horas } = this.state\r\n\r\n        startTimer() \r\n            if (this.timer == 0 && this.state > 0) {\r\n            this.timer = setInterval(this.countDown, 1000)\r\n            }\r\n            \r\n        \r\n        if (segundos > 0) {\r\n            this.setState(({ segundos }) => ({\r\n                segundos: segundos - 1\r\n            }))\r\n        }\r\n        if (segundos === 0) {\r\n          if (minutos > 0){\r\n         \r\n                this.setState(({ minutos }) => ({\r\n                    minutos: minutos - 1,\r\n                    segundos: 59\r\n                }))\r\n            }\r\n        }\r\n        if (segundos === 0) {\r\n          if (minutos === 0) {\r\n            if(horas === 0) {\r\n            clearInterval(this.myInterval)\r\n          } else {\r\n              this.setState(({ horas }) => ({\r\n                  horas: horas - 1,\r\n                  minutos: 59,\r\n                  segundos: 59,\r\n              }))\r\n          }\r\n      }\r\n    }\r\n    }, 1000)\r\n}\r\n\r\ncomponentWillUnmount() {\r\n    clearInterval(this.myInterval)\r\n}\r\n\r\nrender() {\r\n    const {horas, minutos, segundos } = this.state\r\n    return (\r\n      <div className='Temporizador'>\r\n        <div>\r\n            { horas === 0 && minutos === 0 && segundos === 0\r\n                ? <h1>Fim!</h1>\r\n                : <h1>Tempo restante:      {horas < 10 ? `0${horas}` : horas}:{minutos < 10 ? `0${minutos}` : minutos}:{segundos < 10 ? `0${segundos}` : segundos}</h1>\r\n            }\r\n        </div>\r\n        <div>\r\n        <button onClick={this.startTimer}>Start</button>\r\n        m: {this.state.time.m} s: {this.state.time.s}\r\n      </div>\r\n        </div>\r\n    )\r\n}\r\n}\r\nexport default Temporizador;"]},"metadata":{},"sourceType":"module"}