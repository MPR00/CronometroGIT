{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vinicius\\\\Cronometro\\\\CronometroGIT\\\\cronometro\\\\src\\\\temporizador\\\\Temporizador.js\";\nimport React from 'react';\nimport './Temporizador.css';\n\nclass Temporizador extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      horas: 5,\n      minutos: 4,\n      segundos: 40\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.state = {\n      value: ''\n    };\n  }\n\n  componentDidMount() {\n    this.myInterval = setInterval(() => {\n      const {\n        segundos,\n        minutos,\n        horas\n      } = this.state;\n\n      if (segundos > 0) {\n        this.setState(({\n          segundos\n        }) => ({\n          segundos: segundos - 1\n        }));\n      }\n\n      if (segundos === 0) {\n        if (minutos === 0) {\n          clearInterval(this.myInterval);\n        } else {\n          this.setState(({\n            minutos\n          }) => ({\n            minutos: minutos - 1,\n            segundos: 59\n          }));\n        }\n      }\n\n      if (segundos === 0) {\n        if (minutos === 0) {\n          if (horas === 0) {\n            clearInterval(this.myInterval);\n          } else {\n            this.setState(({\n              horas\n            }) => ({\n              horas: horas - 1,\n              minutos: 59,\n              segundos: 59\n            }));\n          }\n        }\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.myInterval);\n  }\n\n  render() {\n    const {\n      horas,\n      minutos,\n      segundos\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Temporizador\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, this.state.value)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, horas === 0 && minutos === 0 && segundos === 0 ? /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 19\n      }\n    }, \"Busted!\") : /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }\n    }, \"Time Remaining:\", horas, \":\", minutos, \":\", segundos < 10 ? `0${segundos}` : segundos)));\n  }\n\n}\n\nexport default Temporizador;","map":{"version":3,"sources":["C:/Users/Vinicius/Cronometro/CronometroGIT/cronometro/src/temporizador/Temporizador.js"],"names":["React","Temporizador","Component","constructor","state","horas","minutos","segundos","handleChange","e","setState","value","target","componentDidMount","myInterval","setInterval","clearInterval","componentWillUnmount","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './Temporizador.css';\r\n\r\n\r\nclass Temporizador extends React.Component {\r\n  state = {\r\n    horas:5,\r\n    minutos:4,\r\n    segundos:40,\r\n  }\r\n  constructor() {\r\n  super();\r\nthis.state = {value :''}\r\n  }\r\n  handleChange = (e) =>{ \r\n    this.setState({value: e.target.value});\r\n  }\r\n  \r\n  \r\ncomponentDidMount() {\r\n    this.myInterval = setInterval(() => {\r\n        const { segundos, minutos, horas } = this.state\r\n\r\n        if (segundos > 0) {\r\n            this.setState(({ segundos }) => ({\r\n                segundos: segundos - 1\r\n            }))\r\n        }\r\n        if (segundos === 0) {\r\n            if (minutos === 0) {\r\n                clearInterval(this.myInterval)\r\n            } else {\r\n                this.setState(({ minutos }) => ({\r\n                    minutos: minutos - 1,\r\n                    segundos: 59\r\n                }))\r\n            }\r\n        } \r\n        if (segundos === 0) {\r\n          if (minutos === 0) {\r\n            if (horas === 0) {\r\n              clearInterval(this.myInterval)\r\n            } else {\r\n                this.setState(({ horas }) => ({\r\n                    horas: horas - 1,\r\n                    minutos: 59,\r\n                    segundos: 59\r\n                }))\r\n            }\r\n          }\r\n        }\r\n    }, 1000)\r\n}\r\n\r\ncomponentWillUnmount() {\r\n    clearInterval(this.myInterval)\r\n}\r\n\r\nrender() {\r\n    const { horas, minutos, segundos } = this.state\r\n    return (\r\n      <div className= 'Temporizador'>\r\n        <div>\r\n        <input type=\"text\" value={this.state.value} onChange={this.handleChange}/>\r\n        <div>{this.state.value}</div>\r\n    </div>\r\n        <div>\r\n            { horas === 0 && minutos === 0 && segundos === 0\r\n                ? <h1>Busted!</h1>\r\n                : <h1>Time Remaining:{horas}:{minutos}:{segundos < 10 ? `0${segundos}` : segundos}</h1>\r\n            }\r\n        </div>\r\n     </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default Temporizador;"]},"metadata":{},"sourceType":"module"}