{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vinicius\\\\Cronometro\\\\CronometroGIT\\\\cronometro\\\\src\\\\temporizador\\\\Temporizador.js\";\nimport React from 'react';\nimport './Temporizador.css';\nimport moment from 'moment';\n\nclass Temporizador extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      days: undefined,\n      hours: undefined,\n      minutes: undefined,\n      seconds: undefined\n    };\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      const {\n        timeTillDate,\n        timeFormat\n      } = this.props;\n      const then = moment(timeTillDate, timeFormat);\n      const now = moment();\n      const countdown = moment(then - now);\n      const days = countdown.format('D');\n      const hours = countdown.format('HH');\n      const minutes = countdown.format('mm');\n      const seconds = countdown.format('ss');\n      this.setState({\n        days,\n        hours,\n        minutes,\n        seconds\n      });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  }\n\n  render() {\n    const {\n      days,\n      hours,\n      minutes,\n      seconds\n    } = this.state; // Mapping the date values to radius values\n\n    const daysRadius = mapNumber(days, 30, 0, 0, 360);\n    const hoursRadius = mapNumber(hours, 24, 0, 0, 360);\n    const minutesRadius = mapNumber(minutes, 60, 0, 0, 360);\n    const secondsRadius = mapNumber(seconds, 60, 0, 0, 360);\n\n    if (!seconds) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, \"Countdown\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"countdown-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, days && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"countdown-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(SVGCircle, {\n      radius: daysRadius,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }), days, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, \"days\")), hours && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"countdown-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(SVGCircle, {\n      radius: hoursRadius,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }), hours, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, \"hours\")), minutes && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"countdown-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(SVGCircle, {\n      radius: minutesRadius,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }), minutes, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, \"minutes\")), seconds && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"countdown-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(SVGCircle, {\n      radius: secondsRadius,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }), seconds, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, \"seconds\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Vinicius/Cronometro/CronometroGIT/cronometro/src/temporizador/Temporizador.js"],"names":["React","moment","Temporizador","Component","state","days","undefined","hours","minutes","seconds","componentDidMount","interval","setInterval","timeTillDate","timeFormat","props","then","now","countdown","format","setState","componentWillUnmount","clearInterval","render","daysRadius","mapNumber","hoursRadius","minutesRadius","secondsRadius"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './Temporizador.css';\r\nimport moment from 'moment'\r\n\r\nclass Temporizador extends React.Component {\r\n  state = {\r\n    days: undefined,\r\n    hours: undefined,\r\n    minutes: undefined,\r\n    seconds: undefined\r\n};\r\n\r\ncomponentDidMount() {\r\n    this.interval = setInterval(() => {\r\n        const { timeTillDate, timeFormat } = this.props;\r\n        const then = moment(timeTillDate, timeFormat);\r\n        const now = moment();\r\n        const countdown = moment(then - now);\r\n        const days = countdown.format('D');\r\n        const hours = countdown.format('HH');\r\n        const minutes = countdown.format('mm');\r\n        const seconds = countdown.format('ss');\r\n\r\n        this.setState({ days, hours, minutes, seconds });\r\n    }, 1000);\r\n}\r\n\r\ncomponentWillUnmount() {\r\n    if (this.interval) {\r\n        clearInterval(this.interval);\r\n    }\r\n}\r\n\r\nrender() {\r\n    const { days, hours, minutes, seconds } = this.state;\r\n\r\n    // Mapping the date values to radius values\r\n    const daysRadius = mapNumber(days, 30, 0, 0, 360);\r\n    const hoursRadius = mapNumber(hours, 24, 0, 0, 360);\r\n    const minutesRadius = mapNumber(minutes, 60, 0, 0, 360);\r\n    const secondsRadius = mapNumber(seconds, 60, 0, 0, 360);\r\n\r\n    if (!seconds) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Countdown</h1>\r\n            <div className=\"countdown-wrapper\">\r\n                {days && (\r\n                    <div className=\"countdown-item\">\r\n                        <SVGCircle radius={daysRadius} />\r\n                        {days}\r\n                        <span>days</span>\r\n                    </div>\r\n                )}\r\n                {hours && (\r\n                    <div className=\"countdown-item\">\r\n                        <SVGCircle radius={hoursRadius} />\r\n                        {hours}\r\n                        <span>hours</span>\r\n                    </div>\r\n                )}\r\n                {minutes && (\r\n                    <div className=\"countdown-item\">\r\n                        <SVGCircle radius={minutesRadius} />\r\n                        {minutes}\r\n                        <span>minutes</span>\r\n                    </div>\r\n                )}\r\n                {seconds && (\r\n                    <div className=\"countdown-item\">\r\n                        <SVGCircle radius={secondsRadius} />\r\n                        {seconds}\r\n                        <span>seconds</span>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}