{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vinicius\\\\Cronometro\\\\CronometroGIT\\\\cronometro\\\\src\\\\temporizador\\\\Temporizador.js\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countdown: [{\n        unit: 'days',\n        value: ''\n      }, {\n        unit: 'hours',\n        value: ''\n      }, {\n        unit: 'mins',\n        value: ''\n      }, {\n        unit: 'secs',\n        value: ''\n      }],\n      dateInput: '',\n      timeInput: '',\n      ampm: 'am',\n      modalStyle: {\n        display: 'none'\n      },\n      countdownStyle: {\n        display: 'none'\n      },\n      infoMessage: '',\n      infoStyle: {\n        display: 'none'\n      },\n      errorMessage: '',\n      errorStyle: {\n        display: 'none'\n      }\n    };\n    this.timer = null;\n    this.endDate = JSON.parse(localStorage.getItem('countdownTimer')) || '';\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.endDate = moment(`${this.state.dateInput} ${this.state.timeInput} ${this.state.ampm}`, 'MM-DD-YYYY hh:mm a').format('X');\n\n    if (this.endDate - moment().format('X') < 1) {\n      this.setState({\n        errorMessage: 'The countdown must be set to a future date.',\n        errorStyle: {\n          display: 'block'\n        }\n      });\n    } else if (!moment(this.state.dateInput, 'MM-DD-YYYY', true).isValid()) {\n      this.setState({\n        errorMessage: 'Date input must be a valid date set in MM-DD-YYYY format.',\n        errorStyle: {\n          display: 'block'\n        }\n      });\n    } else if (!moment(this.state.timeInput, 'hh:mm', true).isValid()) {\n      this.setState({\n        errorMessage: 'Time input must be valid according to the 12-hour clock set in hh:mm format.',\n        errorStyle: {\n          display: 'block'\n        }\n      });\n    } else {\n      this.startCountdown();\n      this.closeModal();\n      this.setState({\n        dateInput: '',\n        timeInput: '',\n        ampm: 'am'\n      });\n    }\n  }\n\n  startCountdown() {\n    localStorage.setItem('countdownTimer', JSON.stringify(this.endDate));\n    let countdown = this.state.countdown;\n    let distance;\n    clearInterval(this.timer);\n\n    if (this.endDate !== '') {\n      this.timer = setInterval(() => {\n        distance = this.endDate - moment().format('X');\n\n        if (distance > 0) {\n          // Days\n          countdown[0]['value'] = parseInt(distance / (60 * 60 * 24), 10); // Hours\n\n          countdown[1].value = parseInt(distance % (60 * 60 * 24) / (60 * 60), 10); // Minutes\n\n          countdown[2].value = parseInt(distance % (60 * 60) / 60, 10); // Seconds\n\n          countdown[3].value = parseInt(distance % 60, 10);\n          this.setState({\n            countdown,\n            countdownStyle: {\n              display: 'block'\n            },\n            infoStyle: {\n              display: 'none'\n            }\n          });\n        } else {\n          countdown = countdown.map(unit => {\n            unit.value = '';\n            return unit;\n          });\n          clearInterval(this.timer);\n          this.setState({\n            countdown,\n            countdownStyle: {\n              display: 'none'\n            },\n            infoMessage: 'Countdown ended. Click the Settings button to start a new countdown.',\n            infoStyle: {\n              display: 'block'\n            }\n          });\n          this.endDate = '';\n          localStorage.setItem('countdownTimer', JSON.stringify(this.endDate));\n        }\n      });\n      this.setState({\n        errorMessage: '',\n        errorStyle: {\n          display: 'none'\n        }\n      });\n    } else {\n      this.setState({\n        infoMessage: 'Click the Settings button to start a new countdown.',\n        infoStyle: {\n          display: 'block'\n        }\n      });\n    }\n  }\n\n  clearCountdown() {\n    let countdown = this.state.countdown;\n\n    if (this.endDate !== '') {\n      if (confirm('Are you sure you want to clear your currently running countdown?')) {\n        clearInterval(this.timer);\n        countdown = countdown.map(unit => {\n          unit.value = '';\n          return unit;\n        });\n        this.setState({\n          countdown,\n          countdownStyle: {\n            display: 'none'\n          },\n          infoMessage: 'Countdown cleared. Click the Settings button to start a new countdown.',\n          infoStyle: {\n            display: 'block'\n          }\n        });\n        this.endDate = '';\n        localStorage.setItem('countdownTimer', JSON.stringify(this.endDate));\n      }\n    } else {\n      alert('No countdown has been set. Please click the Settings button to start a new countdown.');\n    }\n  }\n\n  openModal() {\n    this.setState({\n      modalStyle: {\n        display: 'block'\n      }\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      modalStyle: {\n        display: 'none'\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.startCountdown();\n    window.addEventListener('click', event => {\n      if (event.target.id === 'modal') {\n        this.closeModal();\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"header-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }, \"Countdown Timer\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-group header-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"button header-button clear\",\n      onClick: () => this.clearCountdown(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, \"Clear\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"button header-button settings\",\n      onClick: () => this.openModal(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }, \"Settings\"))), /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal\",\n      id: \"modal\",\n      style: this.state.modalStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 15\n      }\n    }, \"Set New Countdown\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: event => this.handleSubmit(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"date-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"dateInput\",\n      onChange: event => this.handleChange(event),\n      value: this.state.dateInput,\n      placeholder: \"MM-DD-YYYY\",\n      id: \"date-input\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"time-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    }, \"Time\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"timeInput\",\n      onChange: event => this.handleChange(event),\n      value: this.state.timeInput,\n      placeholder: \"hh:mm\",\n      id: \"time-input\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"ampm-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    }, \"AM/PM\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"select-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      name: \"ampm\",\n      onChange: event => this.handleChange(event),\n      value: this.state.ampm,\n      id: \"ampm-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"am\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }\n    }, \"AM\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"pm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }\n    }, \"PM\")))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"message error-message\",\n      style: this.state.errorStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-exclamation-circle fa-lg fa-fw\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 86\n      }\n    }), \" \", this.state.errorMessage), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"button modal-button\",\n      value: \"Start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"button\",\n      className: \"button modal-button\",\n      onClick: () => this.closeModal(),\n      value: \"Cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"countdown\",\n      style: this.state.countdownStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }\n    }, \"Countdown ends in...\"), this.state.countdown.map((countdownUnit, index) => /*#__PURE__*/React.createElement(CountdownUnit, {\n      key: index,\n      countdownUnit: countdownUnit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 65\n      }\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"message info-message\",\n      style: this.state.infoStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-info-circle fa-lg fa-fw\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 76\n      }\n    }), \" \", this.state.infoMessage)), /*#__PURE__*/React.createElement(\"footer\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }\n    }, \"Created by \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"https://autumnbullard-portfolio.herokuapp.com\",\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 28\n      }\n    }, \"Autumn Bullard\"), \" \\xA9 \", new Date().getFullYear()));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Vinicius/Cronometro/CronometroGIT/cronometro/src/temporizador/Temporizador.js"],"names":["App","Component","constructor","props","state","countdown","unit","value","dateInput","timeInput","ampm","modalStyle","display","countdownStyle","infoMessage","infoStyle","errorMessage","errorStyle","timer","endDate","JSON","parse","localStorage","getItem","handleChange","event","setState","target","name","handleSubmit","preventDefault","moment","format","isValid","startCountdown","closeModal","setItem","stringify","distance","clearInterval","setInterval","parseInt","map","clearCountdown","confirm","alert","openModal","componentDidMount","window","addEventListener","id","render","countdownUnit","index","Date","getFullYear"],"mappings":";AAAA,eAAe,MAAMA,GAAN,SAAkBC,SAAlB,CAA4B;AAEzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,CACT;AACEC,QAAAA,IAAI,EAAE,MADR;AAEEC,QAAAA,KAAK,EAAE;AAFT,OADS,EAKT;AACED,QAAAA,IAAI,EAAE,OADR;AAEEC,QAAAA,KAAK,EAAE;AAFT,OALS,EAST;AACED,QAAAA,IAAI,EAAE,MADR;AAEEC,QAAAA,KAAK,EAAE;AAFT,OATS,EAaT;AACED,QAAAA,IAAI,EAAE,MADR;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAbS,CADA;AAmBXC,MAAAA,SAAS,EAAE,EAnBA;AAoBXC,MAAAA,SAAS,EAAE,EApBA;AAqBXC,MAAAA,IAAI,EAAE,IArBK;AAsBXC,MAAAA,UAAU,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV,OAtBD;AAuBXC,MAAAA,cAAc,EAAE;AAACD,QAAAA,OAAO,EAAE;AAAV,OAvBL;AAwBXE,MAAAA,WAAW,EAAE,EAxBF;AAyBXC,MAAAA,SAAS,EAAE;AAACH,QAAAA,OAAO,EAAE;AAAV,OAzBA;AA0BXI,MAAAA,YAAY,EAAE,EA1BH;AA2BXC,MAAAA,UAAU,EAAE;AAACL,QAAAA,OAAO,EAAE;AAAV;AA3BD,KAAb;AA6BA,SAAKM,KAAL,GAAa,IAAb;AACA,SAAKC,OAAL,GAAeC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAX,KAAsD,EAArE;AACD;;AAEDC,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAClB,SAAKC,QAAL,CAAc;AACZ,OAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAapB;AADtB,KAAd;AAGD;;AAEDsB,EAAAA,YAAY,CAACJ,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAACK,cAAN;AACA,SAAKX,OAAL,GAAeY,MAAM,CAAE,GAAE,KAAK3B,KAAL,CAAWI,SAAU,IAAG,KAAKJ,KAAL,CAAWK,SAAU,IAAG,KAAKL,KAAL,CAAWM,IAAK,EAApE,EAAuE,oBAAvE,CAAN,CAAmGsB,MAAnG,CAA0G,GAA1G,CAAf;;AAEA,QAAK,KAAKb,OAAL,GAAeY,MAAM,GAAGC,MAAT,CAAgB,GAAhB,CAAhB,GAAwC,CAA5C,EAA+C;AAC7C,WAAKN,QAAL,CAAc;AACZV,QAAAA,YAAY,EAAE,6CADF;AAEZC,QAAAA,UAAU,EAAE;AAACL,UAAAA,OAAO,EAAE;AAAV;AAFA,OAAd;AAID,KALD,MAMK,IAAI,CAACmB,MAAM,CAAC,KAAK3B,KAAL,CAAWI,SAAZ,EAAuB,YAAvB,EAAqC,IAArC,CAAN,CAAiDyB,OAAjD,EAAL,EAAiE;AACpE,WAAKP,QAAL,CAAc;AACZV,QAAAA,YAAY,EAAE,2DADF;AAEZC,QAAAA,UAAU,EAAE;AAACL,UAAAA,OAAO,EAAE;AAAV;AAFA,OAAd;AAID,KALI,MAMA,IAAI,CAACmB,MAAM,CAAC,KAAK3B,KAAL,CAAWK,SAAZ,EAAuB,OAAvB,EAAgC,IAAhC,CAAN,CAA4CwB,OAA5C,EAAL,EAA4D;AAC/D,WAAKP,QAAL,CAAc;AACZV,QAAAA,YAAY,EAAE,8EADF;AAEZC,QAAAA,UAAU,EAAE;AAACL,UAAAA,OAAO,EAAE;AAAV;AAFA,OAAd;AAID,KALI,MAMA;AACH,WAAKsB,cAAL;AACA,WAAKC,UAAL;AACA,WAAKT,QAAL,CAAc;AACZlB,QAAAA,SAAS,EAAE,EADC;AAEZC,QAAAA,SAAS,EAAE,EAFC;AAGZC,QAAAA,IAAI,EAAE;AAHM,OAAd;AAKD;AACF;;AAEDwB,EAAAA,cAAc,GAAG;AACfZ,IAAAA,YAAY,CAACc,OAAb,CAAqB,gBAArB,EAAuChB,IAAI,CAACiB,SAAL,CAAe,KAAKlB,OAApB,CAAvC;AACA,QAAId,SAAS,GAAG,KAAKD,KAAL,CAAWC,SAA3B;AACA,QAAIiC,QAAJ;AAEAC,IAAAA,aAAa,CAAC,KAAKrB,KAAN,CAAb;;AAEA,QAAI,KAAKC,OAAL,KAAiB,EAArB,EAAyB;AACvB,WAAKD,KAAL,GAAasB,WAAW,CAAC,MAAM;AAC7BF,QAAAA,QAAQ,GAAG,KAAKnB,OAAL,GAAeY,MAAM,GAAGC,MAAT,CAAgB,GAAhB,CAA1B;;AAEA,YAAIM,QAAQ,GAAG,CAAf,EAAkB;AAChB;AACAjC,UAAAA,SAAS,CAAC,CAAD,CAAT,CAAa,OAAb,IAAwBoC,QAAQ,CAACH,QAAQ,IAAI,KAAK,EAAL,GAAU,EAAd,CAAT,EAA4B,EAA5B,CAAhC,CAFgB,CAGhB;;AACAjC,UAAAA,SAAS,CAAC,CAAD,CAAT,CAAaE,KAAb,GAAqBkC,QAAQ,CAACH,QAAQ,IAAI,KAAK,EAAL,GAAU,EAAd,CAAR,IAA6B,KAAK,EAAlC,CAAD,EAAwC,EAAxC,CAA7B,CAJgB,CAKhB;;AACAjC,UAAAA,SAAS,CAAC,CAAD,CAAT,CAAaE,KAAb,GAAqBkC,QAAQ,CAACH,QAAQ,IAAI,KAAK,EAAT,CAAR,GAAwB,EAAzB,EAA8B,EAA9B,CAA7B,CANgB,CAOhB;;AACAjC,UAAAA,SAAS,CAAC,CAAD,CAAT,CAAaE,KAAb,GAAqBkC,QAAQ,CAACH,QAAQ,GAAG,EAAZ,EAAgB,EAAhB,CAA7B;AACA,eAAKZ,QAAL,CAAc;AACZrB,YAAAA,SADY;AAEZQ,YAAAA,cAAc,EAAE;AAACD,cAAAA,OAAO,EAAE;AAAV,aAFJ;AAGZG,YAAAA,SAAS,EAAE;AAACH,cAAAA,OAAO,EAAE;AAAV;AAHC,WAAd;AAKD,SAdD,MAeK;AACHP,UAAAA,SAAS,GAAGA,SAAS,CAACqC,GAAV,CAAcpC,IAAI,IAAI;AAChCA,YAAAA,IAAI,CAACC,KAAL,GAAa,EAAb;AACA,mBAAOD,IAAP;AACD,WAHW,CAAZ;AAIAiC,UAAAA,aAAa,CAAC,KAAKrB,KAAN,CAAb;AACA,eAAKQ,QAAL,CAAc;AACZrB,YAAAA,SADY;AAEZQ,YAAAA,cAAc,EAAE;AAACD,cAAAA,OAAO,EAAE;AAAV,aAFJ;AAGZE,YAAAA,WAAW,EAAE,sEAHD;AAIZC,YAAAA,SAAS,EAAE;AAACH,cAAAA,OAAO,EAAE;AAAV;AAJC,WAAd;AAMA,eAAKO,OAAL,GAAe,EAAf;AACAG,UAAAA,YAAY,CAACc,OAAb,CAAqB,gBAArB,EAAuChB,IAAI,CAACiB,SAAL,CAAe,KAAKlB,OAApB,CAAvC;AACD;AACF,OAjCuB,CAAxB;AAkCA,WAAKO,QAAL,CAAc;AACZV,QAAAA,YAAY,EAAE,EADF;AAEZC,QAAAA,UAAU,EAAE;AAACL,UAAAA,OAAO,EAAE;AAAV;AAFA,OAAd;AAID,KAvCD,MAwCK;AACH,WAAKc,QAAL,CAAc;AACZZ,QAAAA,WAAW,EAAE,qDADD;AAEZC,QAAAA,SAAS,EAAE;AAACH,UAAAA,OAAO,EAAE;AAAV;AAFC,OAAd;AAID;AACF;;AAED+B,EAAAA,cAAc,GAAG;AACf,QAAItC,SAAS,GAAG,KAAKD,KAAL,CAAWC,SAA3B;;AAEA,QAAI,KAAKc,OAAL,KAAiB,EAArB,EAAyB;AAEvB,UAAIyB,OAAO,CAAC,kEAAD,CAAX,EAAiF;AAC/EL,QAAAA,aAAa,CAAC,KAAKrB,KAAN,CAAb;AACAb,QAAAA,SAAS,GAAGA,SAAS,CAACqC,GAAV,CAAcpC,IAAI,IAAI;AAChCA,UAAAA,IAAI,CAACC,KAAL,GAAa,EAAb;AACA,iBAAOD,IAAP;AACD,SAHW,CAAZ;AAIA,aAAKoB,QAAL,CAAc;AACZrB,UAAAA,SADY;AAEZQ,UAAAA,cAAc,EAAE;AAACD,YAAAA,OAAO,EAAE;AAAV,WAFJ;AAGZE,UAAAA,WAAW,EAAE,wEAHD;AAIZC,UAAAA,SAAS,EAAE;AAACH,YAAAA,OAAO,EAAE;AAAV;AAJC,SAAd;AAMA,aAAKO,OAAL,GAAe,EAAf;AACAG,QAAAA,YAAY,CAACc,OAAb,CAAqB,gBAArB,EAAuChB,IAAI,CAACiB,SAAL,CAAe,KAAKlB,OAApB,CAAvC;AACD;AACF,KAjBD,MAkBK;AACH0B,MAAAA,KAAK,CAAC,uFAAD,CAAL;AACD;AACF;;AAEDC,EAAAA,SAAS,GAAG;AACV,SAAKpB,QAAL,CAAc;AACZf,MAAAA,UAAU,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV;AADA,KAAd;AAGD;;AAEDuB,EAAAA,UAAU,GAAG;AACX,SAAKT,QAAL,CAAc;AACZf,MAAAA,UAAU,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV;AADA,KAAd;AAGD;;AAEDmC,EAAAA,iBAAiB,GAAG;AAClB,SAAKb,cAAL;AACAc,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAkCxB,KAAD,IAAW;AAE1C,UAAIA,KAAK,CAACE,MAAN,CAAauB,EAAb,KAAoB,OAAxB,EAAiC;AAC/B,aAAKf,UAAL;AACD;AACF,KALD;AAMD;;AAEDgB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,4BAAhC;AAA6D,MAAA,OAAO,EAAE,MAAM,KAAKR,cAAL,EAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,+BAAhC;AAAgE,MAAA,OAAO,EAAE,MAAM,KAAKG,SAAL,EAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CAFF,CAFF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,EAAE,EAAC,OAA1B;AAAkC,MAAA,KAAK,EAAE,KAAK1C,KAAL,CAAWO,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,QAAQ,EAAGc,KAAD,IAAW,KAAKI,YAAL,CAAkBJ,KAAlB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,WAAxB;AAAoC,MAAA,QAAQ,EAAGA,KAAD,IAAW,KAAKD,YAAL,CAAkBC,KAAlB,CAAzD;AAAmF,MAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWI,SAArG;AAAgH,MAAA,WAAW,EAAC,YAA5H;AAAyI,MAAA,EAAE,EAAC,YAA5I;AAAyJ,MAAA,QAAQ,MAAjK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAKE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,WAAxB;AAAoC,MAAA,QAAQ,EAAGiB,KAAD,IAAW,KAAKD,YAAL,CAAkBC,KAAlB,CAAzD;AAAmF,MAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWK,SAArG;AAAgH,MAAA,WAAW,EAAC,OAA5H;AAAoI,MAAA,EAAE,EAAC,YAAvI;AAAoJ,MAAA,QAAQ,MAA5J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CALF,eASE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,QAAQ,EAAGgB,KAAD,IAAW,KAAKD,YAAL,CAAkBC,KAAlB,CAAzC;AAAmE,MAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWM,IAArF;AAA2F,MAAA,EAAE,EAAC,YAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CADF,CAFF,CATF,eAmBE;AAAG,MAAA,SAAS,EAAC,uBAAb;AAAqC,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWa,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAmE;AAAM,MAAA,SAAS,EAAC,sCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnE,OAAmI,KAAKb,KAAL,CAAWY,YAA9I,CAnBF,eAoBE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAC,qBAA/B;AAAqD,MAAA,KAAK,EAAC,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAC,qBAA/B;AAAqD,MAAA,OAAO,EAAE,MAAM,KAAKmB,UAAL,EAApE;AAAuF,MAAA,KAAK,EAAC,QAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CApBF,CADF,CAFF,CADF,CAFF,eAmCE;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWS,cAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEG,KAAKT,KAAL,CAAWC,SAAX,CAAqBqC,GAArB,CAAyB,CAACU,aAAD,EAAgBC,KAAhB,kBAA0B,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAEA,KAApB;AAA2B,MAAA,aAAa,EAAED,aAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnD,CAFH,CAnCF,eAuCE;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAoC,MAAA,KAAK,EAAE,KAAKhD,KAAL,CAAWW,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiE;AAAM,MAAA,SAAS,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjE,OAA0H,KAAKX,KAAL,CAAWU,WAArI,CAvCF,CATF,eAmDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAmB;AAAG,MAAA,IAAI,EAAC,+CAAR;AAAwD,MAAA,MAAM,EAAC,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAnB,YAAsH,IAAIwC,IAAJ,GAAWC,WAAX,EAAtH,CAnDF,CADF;AAuDD;;AA3OwC","sourcesContent":["export default class App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      countdown: [\r\n        {\r\n          unit: 'days',\r\n          value: ''\r\n        },\r\n        {\r\n          unit: 'hours',\r\n          value: ''\r\n        },\r\n        {\r\n          unit: 'mins',\r\n          value: ''\r\n        },\r\n        {\r\n          unit: 'secs',\r\n          value: ''\r\n        }\r\n      ],\r\n      dateInput: '',\r\n      timeInput: '',\r\n      ampm: 'am',\r\n      modalStyle: {display: 'none'},\r\n      countdownStyle: {display: 'none'},\r\n      infoMessage: '',\r\n      infoStyle: {display: 'none'},\r\n      errorMessage: '',\r\n      errorStyle: {display: 'none'}\r\n    };\r\n    this.timer = null;\r\n    this.endDate = JSON.parse(localStorage.getItem('countdownTimer')) || '';\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.endDate = moment(`${this.state.dateInput} ${this.state.timeInput} ${this.state.ampm}`, 'MM-DD-YYYY hh:mm a').format('X');\r\n\r\n    if ((this.endDate - moment().format('X')) < 1) {\r\n      this.setState({\r\n        errorMessage: 'The countdown must be set to a future date.',\r\n        errorStyle: {display: 'block'}\r\n      });\r\n    }\r\n    else if (!moment(this.state.dateInput, 'MM-DD-YYYY', true).isValid()) {\r\n      this.setState({\r\n        errorMessage: 'Date input must be a valid date set in MM-DD-YYYY format.',\r\n        errorStyle: {display: 'block'}\r\n      });\r\n    }\r\n    else if (!moment(this.state.timeInput, 'hh:mm', true).isValid()) {\r\n      this.setState({\r\n        errorMessage: 'Time input must be valid according to the 12-hour clock set in hh:mm format.',\r\n        errorStyle: {display: 'block'}\r\n      });\r\n    }\r\n    else {\r\n      this.startCountdown();\r\n      this.closeModal();\r\n      this.setState({\r\n        dateInput: '',\r\n        timeInput: '',\r\n        ampm: 'am'\r\n      });\r\n    }\r\n  }\r\n\r\n  startCountdown() {\r\n    localStorage.setItem('countdownTimer', JSON.stringify(this.endDate));\r\n    let countdown = this.state.countdown;\r\n    let distance;\r\n\r\n    clearInterval(this.timer);\r\n\r\n    if (this.endDate !== '') {\r\n      this.timer = setInterval(() => {\r\n        distance = this.endDate - moment().format('X');\r\n\r\n        if (distance > 0) {\r\n          // Days\r\n          countdown[0]['value'] = parseInt(distance / (60 * 60 * 24), 10);\r\n          // Hours\r\n          countdown[1].value = parseInt(distance % (60 * 60 * 24) / (60 * 60), 10);\r\n          // Minutes\r\n          countdown[2].value = parseInt(distance % (60 * 60) / (60), 10);\r\n          // Seconds\r\n          countdown[3].value = parseInt(distance % 60, 10);\r\n          this.setState({\r\n            countdown,\r\n            countdownStyle: {display: 'block'},\r\n            infoStyle: {display: 'none'}\r\n          });\r\n        }\r\n        else {\r\n          countdown = countdown.map(unit => {\r\n            unit.value = '';\r\n            return unit;\r\n          });\r\n          clearInterval(this.timer);\r\n          this.setState({\r\n            countdown,\r\n            countdownStyle: {display: 'none'},\r\n            infoMessage: 'Countdown ended. Click the Settings button to start a new countdown.',\r\n            infoStyle: {display: 'block'}\r\n          });\r\n          this.endDate = '';\r\n          localStorage.setItem('countdownTimer', JSON.stringify(this.endDate));\r\n        }\r\n      });\r\n      this.setState({\r\n        errorMessage: '',\r\n        errorStyle: {display: 'none'}\r\n      });\r\n    }\r\n    else {\r\n      this.setState({\r\n        infoMessage: 'Click the Settings button to start a new countdown.',\r\n        infoStyle: {display: 'block'}\r\n      });\r\n    }\r\n  }\r\n\r\n  clearCountdown() {\r\n    let countdown = this.state.countdown;\r\n\r\n    if (this.endDate !== '') {\r\n\r\n      if (confirm('Are you sure you want to clear your currently running countdown?')) {\r\n        clearInterval(this.timer);\r\n        countdown = countdown.map(unit => {\r\n          unit.value = '';\r\n          return unit;\r\n        });\r\n        this.setState({\r\n          countdown,\r\n          countdownStyle: {display: 'none'},\r\n          infoMessage: 'Countdown cleared. Click the Settings button to start a new countdown.',\r\n          infoStyle: {display: 'block'}\r\n        });\r\n        this.endDate = '';\r\n        localStorage.setItem('countdownTimer', JSON.stringify(this.endDate));\r\n      }\r\n    }\r\n    else {\r\n      alert('No countdown has been set. Please click the Settings button to start a new countdown.')\r\n    }\r\n  }\r\n\r\n  openModal() {\r\n    this.setState({\r\n      modalStyle: {display: 'block'}\r\n    });\r\n  }\r\n\r\n  closeModal() {\r\n    this.setState({\r\n      modalStyle: {display: 'none'}\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.startCountdown();\r\n    window.addEventListener('click', (event) => {\r\n\r\n      if (event.target.id === 'modal') {\r\n        this.closeModal();\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"body\">\r\n        {/* HEADER */}\r\n        <header>\r\n          <h1 className=\"header-item\">Countdown Timer</h1>\r\n          <div className=\"button-group header-item\">\r\n            <button type=\"button\" className=\"button header-button clear\" onClick={() => this.clearCountdown()}>Clear</button>\r\n            <button type=\"button\" className=\"button header-button settings\" onClick={() => this.openModal()}>Settings</button>\r\n          </div>\r\n        </header>\r\n        <main>\r\n          {/* SETTINGS MODAL */}\r\n          <div className=\"modal\" id=\"modal\" style={this.state.modalStyle}>\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">Set New Countdown</div>\r\n              <div className=\"modal-body\">\r\n                <form onSubmit={(event) => this.handleSubmit(event)}>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"date-input\">Date</label>\r\n                    <input type=\"text\" name=\"dateInput\" onChange={(event) => this.handleChange(event)} value={this.state.dateInput} placeholder=\"MM-DD-YYYY\" id=\"date-input\" required />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"time-input\">Time</label>\r\n                    <input type=\"text\" name=\"timeInput\" onChange={(event) => this.handleChange(event)} value={this.state.timeInput} placeholder=\"hh:mm\" id=\"time-input\" required />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"ampm-input\">AM/PM</label>\r\n                    <div className=\"select-wrapper\">\r\n                      <select name=\"ampm\" onChange={(event) => this.handleChange(event)} value={this.state.ampm} id=\"ampm-input\">\r\n                        <option value=\"am\">AM</option>\r\n                        <option value=\"pm\">PM</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                  {/* ERROR MESSAGE */}\r\n                  <p className=\"message error-message\" style={this.state.errorStyle}><span className=\"fa fa-exclamation-circle fa-lg fa-fw\"></span> {this.state.errorMessage}</p>\r\n                  <div className=\"button-group\">\r\n                    <input type=\"submit\" className=\"button modal-button\" value=\"Start\" />\r\n                    <input type=\"button\" className=\"button modal-button\" onClick={() => this.closeModal()} value=\"Cancel\" />\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* COUNTDOWN TIMER */}\r\n          <div className=\"countdown\" style={this.state.countdownStyle}>\r\n            <p>Countdown ends in...</p>\r\n            {this.state.countdown.map((countdownUnit, index) => <CountdownUnit key={index} countdownUnit={countdownUnit} />)}\r\n          </div>\r\n          <p className=\"message info-message\" style={this.state.infoStyle}><span className=\"fa fa-info-circle fa-lg fa-fw\"></span> {this.state.infoMessage}</p>\r\n        </main>\r\n        {/* FOOTER */}\r\n        <footer>Created by <a href=\"https://autumnbullard-portfolio.herokuapp.com\" target=\"_blank\">Autumn Bullard</a> &copy; {new Date().getFullYear()}</footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}