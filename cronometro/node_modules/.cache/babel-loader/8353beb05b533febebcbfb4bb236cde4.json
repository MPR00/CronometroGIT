{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vinicius\\\\Cronometro\\\\CronometroGIT\\\\cronometro\\\\src\\\\temporizador\\\\Temporizador.js\";\nimport React from 'react';\nimport './Temporizador.css';\n\nclass Temporizador extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      horas: undefined,\n      minutes: undefined,\n      seconds: undefined\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.myInterval = setInterval(() => {\n      const {\n        seconds,\n        minutes,\n        horas\n      } = this.state;\n\n      if (seconds > 0) {\n        this.setState(({\n          seconds\n        }) => ({\n          seconds: seconds - 1\n        }));\n      }\n\n      if (seconds === 0) {\n        if (minutes > 0) {\n          this.setState(({\n            minutes\n          }) => ({\n            minutes: minutes - 1,\n            seconds: 59\n          }));\n        }\n      }\n\n      if (seconds === 0) {\n        if (minutes === 0) {\n          if (horas === 0) {\n            clearInterval(this.myInterval);\n          } else {\n            this.setState(({\n              horas\n            }) => ({\n              horas: horas - 1,\n              minutes: 59,\n              seconds: 59\n            }));\n          }\n        }\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.myInterval);\n  }\n\n  render() {\n    const {\n      horas,\n      minutes,\n      seconds\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Temporizador\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, this.state.value)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, horas === 0 && minutes === 0 && seconds === 0 ? /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }\n    }, \"Busted!\") : /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }, \"Time Remaining:\", horas, \":\", minutes, \":\", seconds < 10 ? `0${seconds}` : seconds)));\n  }\n\n}\n\nexport default Temporizador;","map":{"version":3,"sources":["C:/Users/Vinicius/Cronometro/CronometroGIT/cronometro/src/temporizador/Temporizador.js"],"names":["React","Temporizador","Component","state","horas","undefined","minutes","seconds","handleChange","e","setState","value","target","componentDidMount","myInterval","setInterval","clearInterval","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;;AAIA,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACzCC,KADyC,GACjC;AACNC,MAAAA,KAAK,EAAEC,SADD;AAENC,MAAAA,OAAO,EAAED,SAFH;AAGNE,MAAAA,OAAO,EAAEF;AAHH,KADiC;;AAAA,SAwC3CG,YAxC2C,GAwC3BC,CAAD,IAAM;AACjB,WAAKC,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAEF,CAAC,CAACG,MAAF,CAASD;AAAjB,OAAd;AACD,KA1CwC;AAAA;;AAO3CE,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,UAAL,GAAkBC,WAAW,CAAC,MAAM;AAChC,YAAM;AAAER,QAAAA,OAAF;AAAWD,QAAAA,OAAX;AAAoBF,QAAAA;AAApB,UAA8B,KAAKD,KAAzC;;AAEA,UAAII,OAAO,GAAG,CAAd,EAAiB;AACb,aAAKG,QAAL,CAAc,CAAC;AAAEH,UAAAA;AAAF,SAAD,MAAkB;AAC5BA,UAAAA,OAAO,EAAEA,OAAO,GAAG;AADS,SAAlB,CAAd;AAGH;;AACD,UAAIA,OAAO,KAAK,CAAhB,EAAmB;AACjB,YAAID,OAAO,GAAG,CAAd,EAAgB;AAEV,eAAKI,QAAL,CAAc,CAAC;AAAEJ,YAAAA;AAAF,WAAD,MAAkB;AAC5BA,YAAAA,OAAO,EAAEA,OAAO,GAAG,CADS;AAE5BC,YAAAA,OAAO,EAAE;AAFmB,WAAlB,CAAd;AAIH;AACJ;;AACD,UAAIA,OAAO,KAAK,CAAhB,EAAmB;AACjB,YAAID,OAAO,KAAK,CAAhB,EAAmB;AACjB,cAAGF,KAAK,KAAK,CAAb,EAAgB;AAChBY,YAAAA,aAAa,CAAC,KAAKF,UAAN,CAAb;AACD,WAFC,MAEK;AACH,iBAAKJ,QAAL,CAAc,CAAC;AAAEN,cAAAA;AAAF,aAAD,MAAgB;AAC1BA,cAAAA,KAAK,EAAEA,KAAK,GAAG,CADW;AAE1BE,cAAAA,OAAO,EAAE,EAFiB;AAG1BC,cAAAA,OAAO,EAAE;AAHiB,aAAhB,CAAd;AAKH;AACJ;AACF;AACA,KA9B4B,EA8B1B,IA9B0B,CAA7B;AA+BH;;AAKDU,EAAAA,oBAAoB,GAAG;AACnBD,IAAAA,aAAa,CAAC,KAAKF,UAAN,CAAb;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,UAAM;AAACd,MAAAA,KAAD;AAAQE,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAA6B,KAAKJ,KAAxC;AACA,wBAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,KAAKA,KAAL,CAAWQ,KAArC;AAA4C,MAAA,QAAQ,EAAE,KAAKH,YAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,eAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKL,KAAL,CAAWQ,KAAjB,CAFG,CADL,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMP,KAAK,KAAK,CAAV,IAAeE,OAAO,KAAK,CAA3B,IAAgCC,OAAO,KAAK,CAA5C,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,gBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAoBH,KAApB,OAA4BE,OAA5B,OAAsCC,OAAO,GAAG,EAAV,GAAgB,IAAGA,OAAQ,EAA3B,GAA+BA,OAArE,CAHV,CALF,CAFF;AAeH;;AAjE0C;;AAmE3C,eAAeN,YAAf","sourcesContent":["import React from 'react';\r\nimport './Temporizador.css';\r\n\r\n\r\n\r\nclass Temporizador extends React.Component {\r\n  state = {\r\n    horas: undefined,\r\n    minutes: undefined,\r\n    seconds: undefined,\r\n}\r\n\r\ncomponentDidMount() {\r\n    this.myInterval = setInterval(() => {\r\n        const { seconds, minutes, horas } = this.state\r\n\r\n        if (seconds > 0) {\r\n            this.setState(({ seconds }) => ({\r\n                seconds: seconds - 1\r\n            }))\r\n        }\r\n        if (seconds === 0) {\r\n          if (minutes > 0){\r\n         \r\n                this.setState(({ minutes }) => ({\r\n                    minutes: minutes - 1,\r\n                    seconds: 59\r\n                }))\r\n            }\r\n        }\r\n        if (seconds === 0) {\r\n          if (minutes === 0) {\r\n            if(horas === 0) {\r\n            clearInterval(this.myInterval)\r\n          } else {\r\n              this.setState(({ horas }) => ({\r\n                  horas: horas - 1,\r\n                  minutes: 59,\r\n                  seconds: 59,\r\n              }))\r\n          }\r\n      }\r\n    }\r\n    }, 1000)\r\n}\r\nhandleChange = (e) =>{ \r\n    this.setState({value: e.target.value});\r\n  }\r\n\r\ncomponentWillUnmount() {\r\n    clearInterval(this.myInterval)\r\n}\r\n\r\nrender() {\r\n    const {horas, minutes, seconds } = this.state\r\n    return (\r\n        \r\n      <div className='Temporizador'>\r\n           <div>\r\n        <input type=\"text\" value={this.state.value} onChange={this.handleChange}/>\r\n        <div>{this.state.value}</div>\r\n    </div>\r\n        <div>\r\n            { horas === 0 && minutes === 0 && seconds === 0\r\n                ? <h1>Busted!</h1>\r\n                : <h1>Time Remaining:{horas}:{minutes}:{seconds < 10 ? `0${seconds}` : seconds}</h1>\r\n            }\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n}\r\nexport default Temporizador;"]},"metadata":{},"sourceType":"module"}