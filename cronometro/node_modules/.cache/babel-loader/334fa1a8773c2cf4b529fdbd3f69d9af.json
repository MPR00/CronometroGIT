{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vinicius\\\\Cronometro\\\\CronometroGIT\\\\cronometro\\\\src\\\\cronometro\\\\Cronometro.js\";\nimport React from 'react';\nimport moment from 'moment';\nimport './Cronometro.css';\n\nclass Cronometro extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      interval: null,\n      tempo: 0,\n      series: []\n    };\n  }\n\n  iniciarCronometro() {\n    if (this.state.interval) {\n      clearInterval(this.state.interval);\n    }\n\n    const interval = setInterval(() => {\n      this.setState({\n        tempo: this.state.tempo + 1\n      });\n    }, 1000);\n    this.setState({\n      interval\n    });\n  }\n\n  pararCronometro() {\n    clearInterval(this.state.interval);\n    this.setState({\n      interval: null\n    });\n  }\n\n  zerarCronometro() {\n    this.pararCronometro();\n    this.setState({\n      tempo: 0\n    });\n    this.setState({\n      series: \"\"\n    });\n  }\n\n  adicionarSerie() {\n    const series = this.state.series.concat([this.state.tempo]);\n    this.setState({\n      series\n    });\n  }\n\n  getLabelTempo(segundos) {\n    return moment().startOf('day').seconds(segundos).format('HH:mm:ss');\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Cronometro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chronotime\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chronotime-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, this.getLabelTempo(this.state.tempo)))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      disabled: this.state.interval,\n      onClick: event => this.iniciarCronometro(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, this.state.tempo === 0 ? 'Iniciar' : 'Continuar'), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: event => this.pararCronometro(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, \"Parar\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: event => this.zerarCronometro(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, \"Zerar\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: event => this.adicionarSeries(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, \"Parcial\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row row-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, \"Volta\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, \"Tempo\")), this.state.series.map((series, volta) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }, volta + 1), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }, this.getLabelTempo(series)));\n    }))));\n  }\n\n}\n\nexport default Cronometro;","map":{"version":3,"sources":["C:/Users/Vinicius/Cronometro/CronometroGIT/cronometro/src/cronometro/Cronometro.js"],"names":["React","moment","Cronometro","Component","constructor","props","state","interval","tempo","series","iniciarCronometro","clearInterval","setInterval","setState","pararCronometro","zerarCronometro","adicionarSerie","concat","getLabelTempo","segundos","startOf","seconds","format","render","event","adicionarSeries","map","volta"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,kBAAP;;AAEA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,IADC;AAEXC,MAAAA,KAAK,EAAE,CAFI;AAGXC,MAAAA,MAAM,EAAE;AAHG,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKJ,KAAL,CAAWC,QAAf,EAAyB;AACvBI,MAAAA,aAAa,CAAC,KAAKL,KAAL,CAAWC,QAAZ,CAAb;AACD;;AAED,UAAMA,QAAQ,GAAGK,WAAW,CAAC,MAAM;AACjC,WAAKC,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAAX,GAAmB;AAA5B,OAAd;AACD,KAF2B,EAEzB,IAFyB,CAA5B;AAIA,SAAKK,QAAL,CAAc;AAAEN,MAAAA;AAAF,KAAd;AACD;;AAEDO,EAAAA,eAAe,GAAG;AAChBH,IAAAA,aAAa,CAAC,KAAKL,KAAL,CAAWC,QAAZ,CAAb;AACA,SAAKM,QAAL,CAAc;AAAEN,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AACD;;AAEDQ,EAAAA,eAAe,GAAG;AAChB,SAAKD,eAAL;AACA,SAAKD,QAAL,CAAc;AAAEL,MAAAA,KAAK,EAAE;AAAT,KAAd;AACA,SAAKK,QAAL,CAAc;AAAEJ,MAAAA,MAAM,EAAE;AAAV,KAAd;AACD;;AAEDO,EAAAA,cAAc,GAAG;AACf,UAAMP,MAAM,GAAG,KAAKH,KAAL,CAAWG,MAAX,CAAkBQ,MAAlB,CAAyB,CAAC,KAAKX,KAAL,CAAWE,KAAZ,CAAzB,CAAf;AAEA,SAAKK,QAAL,CAAc;AAAEJ,MAAAA;AAAF,KAAd;AACD;;AAEDS,EAAAA,aAAa,CAACC,QAAD,EAAW;AACtB,WAAOlB,MAAM,GACVmB,OADI,CACI,KADJ,EAEJC,OAFI,CAEIF,QAFJ,EAGJG,MAHI,CAGG,UAHH,CAAP;AAID;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKL,aAAL,CAAmB,KAAKZ,KAAL,CAAWE,KAA9B,CAAP,CADF,CADF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWC,QAFvB;AAGE,MAAA,OAAO,EAAEiB,KAAK,IAAI,KAAKd,iBAAL,CAAuBc,KAAvB,CAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG,KAAKlB,KAAL,CAAWE,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,WAJxC,CADF,eAOE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAEgB,KAAK,IAAI,KAAKV,eAAL,CAAqBU,KAArB,CAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,eAYE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAEA,KAAK,IAAI,KAAKT,eAAL,CAAqBS,KAArB,CAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAZF,eAiBE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAEA,KAAK,IAAI,KAAKC,eAAL,CAAqBD,KAArB,CAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAjBF,CAPF,CADF,eAkCE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CADF,EAMG,KAAKlB,KAAL,CAAWG,MAAX,CAAkBiB,GAAlB,CAAsB,CAACjB,MAAD,EAASkB,KAAT,KAAmB;AACxC,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,KAAK,GAAG,CAAb,CADK,eAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKT,aAAL,CAAmBT,MAAnB,CAAL,CAFK,CAAP;AAID,KALA,CANH,CADF,CAlCF,CADF;AAoDD;;AAnGsC;;AAsGzC,eAAeP,UAAf","sourcesContent":["import React from 'react'\r\nimport moment from 'moment'\r\nimport './Cronometro.css'\r\n\r\nclass Cronometro extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      interval: null,\r\n      tempo: 0,\r\n      series: []\r\n    }\r\n  }\r\n\r\n  iniciarCronometro() {\r\n    if (this.state.interval) {\r\n      clearInterval(this.state.interval)\r\n    }\r\n\r\n    const interval = setInterval(() => {\r\n      this.setState({ tempo: this.state.tempo + 1 });\r\n    }, 1000);\r\n\r\n    this.setState({ interval });\r\n  }\r\n\r\n  pararCronometro() {\r\n    clearInterval(this.state.interval)\r\n    this.setState({ interval: null })\r\n  }\r\n\r\n  zerarCronometro() {\r\n    this.pararCronometro()\r\n    this.setState({ tempo: 0 })\r\n    this.setState({ series: \"\" })\r\n  }\r\n\r\n  adicionarSerie() {\r\n    const series = this.state.series.concat([this.state.tempo])\r\n\r\n    this.setState({ series })\r\n  }\r\n\r\n  getLabelTempo(segundos) {\r\n    return moment()\r\n      .startOf('day')\r\n      .seconds(segundos)\r\n      .format('HH:mm:ss')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Cronometro\">\r\n        <div className=\"row\">\r\n          <div className=\"chronotime\">\r\n            <div className=\"chronotime-text\">\r\n              <span>{this.getLabelTempo(this.state.tempo)}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <button\r\n              type=\"button\"\r\n              disabled={this.state.interval}\r\n              onClick={event => this.iniciarCronometro(event)}>\r\n              {this.state.tempo === 0 ? 'Iniciar' : 'Continuar'}\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={event => this.pararCronometro(event)}>\r\n              Parar\r\n          </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={event => this.zerarCronometro(event)}>\r\n              Zerar\r\n          </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={event => this.adicionarSeries(event)}>\r\n              Parcial\r\n          </button>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"row row-table\">\r\n          <table>\r\n            <tr>\r\n              <th>Volta</th>\r\n              <th>Tempo</th>\r\n            </tr>\r\n\r\n            {this.state.series.map((series, volta) => {\r\n              return <tr>\r\n                <td>{volta + 1}</td>\r\n                <td>{this.getLabelTempo(series)}</td>\r\n              </tr>\r\n            })}\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cronometro;\r\n"]},"metadata":{},"sourceType":"module"}